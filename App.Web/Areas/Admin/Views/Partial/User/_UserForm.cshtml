@using App.Core.Models.Entities;
@model UserViewModel


<div class="form-group">
    <label>Image<span class="text-danger">*</span></label><br />
    <div class="image-input" id="kt_image">
        <div class="image-input-wrapper" style="background-image: url(Content/img/default.jpg)"></div>

        <label class="btn btn-xs btn-icon btn-circle btn-white btn-hover-text-primary btn-shadow" data-action="change" data-toggle="tooltip" title="" data-original-title="Change avatar">
            <i class="fa fa-pen icon-sm text-muted"></i>
            @Html.TextBoxFor(model => model.Image, htmlAttributes: new { type = "file", accept = ".png, .jpg, .jpeg" })
            <input type="hidden" name="profile_avatar_remove" />
        </label>

        <span class="btn btn-xs btn-icon btn-circle btn-white btn-hover-text-primary btn-shadow" data-action="cancel" data-toggle="tooltip" title="Cancel avatar">
            <i class="ki ki-bold-close icon-xs text-muted"></i>
        </span>
    </div>
</div>
<div class="form-group">
    <label>Last name<span class="text-danger">*</span></label>
    @Html.EditorFor(model => model.LastName, new { htmlAttributes = new { @class = "form-control", placeholder = "Enter last name", required = "required", type = "text", autocomplete = "off" } })
    @Html.ValidationMessageFor(model => model.LastName, "", new { @class = "text-danger" })
</div>
<div class="form-group">
    <label>First name<span class="text-danger">*</span></label>
    @Html.EditorFor(model => model.FirstName, new { htmlAttributes = new { @class = "form-control", placeholder = "Enter first name", required = "required", type = "text", autocomplete = "off" } })
    @Html.ValidationMessageFor(model => model.FirstName, "", new { @class = "text-danger" })
</div>
<div class="form-group">
    <label>Other name:</label>
    @Html.EditorFor(model => model.OtherName, new { htmlAttributes = new { @class = "form-control", placeholder = "Enter other name", type = "text", autocomplete = "off" } })
    @Html.ValidationMessageFor(model => model.OtherName, "", new { @class = "text-danger" })
</div>
<div class="form-group">
    <label>Phone</label>
    @Html.EditorFor(model => model.PhoneNumber, new { htmlAttributes = new { @class = "form-control", placeholder = "Enter phone", type = "text", autocomplete = "off" } })
    @Html.ValidationMessageFor(model => model.PhoneNumber, "", new { @class = "text-danger" })
</div>
<div class="form-group">
    <label>Email address<span class="text-danger">*</span></label>
    @Html.EditorFor(model => model.Email, new { htmlAttributes = new { @class = "form-control", placeholder = "Enter email address", type = "email", autocomplete = "off" } })
    @Html.ValidationMessageFor(model => model.Email, "", new { @class = "text-danger" })
    <span class="form-text text-muted">This will serve as username to log into the system.</span>
</div>
<div class="form-group">
    <label>Role(s)</label>
    @Html.ListBoxFor(model => model.SelectedRoles, (SelectList)ViewBag.Roles, new { @class = "form-control select2", multiple = "multiple", placeholder = "Select roles", id = "kt_select2_3", autocomplete = "off" })
    @Html.ValidationMessageFor(model => model.SelectedRoles, "", new { @class = "text-danger" })
    <span class="form-text text-muted">User will automatically have access to selected roles permissions.</span>
</div>
<div class="form-group">
    <div class="checkbox-inline">
        <label class="checkbox">
            @Html.CheckBoxFor(model => model.IsActive, new { htmlAttributes = new { } })
            <span></span>
            Activate user
        </label>
    </div>
</div>